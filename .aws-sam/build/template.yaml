AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Aurora Serverless v2 (MySQL) with AWS SAM
Globals:
  Function:
    Timeout: 900
    MemorySize: 1024
Parameters:
  DBName:
    Type: String
    Default: SimpkulatorDB
  DBUsername:
    Type: String
    Default: admin
  DBPassword:
    Type: String
    NoEcho: true
  VpcId:
    Type: AWS::EC2::VPC::Id
  Subnet1:
    Type: AWS::EC2::Subnet::Id
  Subnet2:
    Type: AWS::EC2::Subnet::Id
  MinACU:
    Type: Number
    Default: 0.5
  MaxACU:
    Type: Number
    Default: 4
Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: HelloWorldFunction
      Handler: app.hello_world
      Runtime: python3.11
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get
    Metadata:
      SamResourceId: HelloWorldFunction
  CompanyPeersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: CompanyPeersFunction
      Handler: app.company_peers
      Runtime: python3.11
      Policies:
      - Statement:
        - Effect: Allow
          Action:
          - rds-data:ExecuteStatement
          - secretsmanager:GetSecretValue
          Resource: '*'
      Events:
        CompanyPeers:
          Type: Api
          Properties:
            Path: /CompanyPeers
            Method: get
    Metadata:
      SamResourceId: CompanyPeersFunction
  AuroraSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Ingress for Aurora Serverless
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        CidrIp: '0.0.0.0/0'
  DBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: AuroraDBSecret
      Description: Credentials for Aurora Serverless v2
      SecretString:
        Fn::Sub: "{\n  \"username\": \"${DBUsername}\",\n  \"password\": \"${DBPassword}\"\
          \n}\n"
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Aurora DB subnet group
      SubnetIds:
      - Ref: Subnet1
      - Ref: Subnet2
  AuroraCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-mysql
      EngineVersion: 8.0.mysql_aurora.3.07.0
      DatabaseName:
        Ref: DBName
      MasterUsername:
        Fn::Join:
        - ''
        - - '{{resolve:secretsmanager:'
          - Ref: DBSecret
          - :SecretString:username}}
      MasterUserPassword:
        Fn::Join:
        - ''
        - - '{{resolve:secretsmanager:'
          - Ref: DBSecret
          - :SecretString:password}}
      DBSubnetGroupName:
        Ref: DBSubnetGroup
      VpcSecurityGroupIds:
      - Ref: AuroraSecurityGroup
      EnableHttpEndpoint: true
      ServerlessV2ScalingConfiguration:
        MinCapacity:
          Ref: MinACU
        MaxCapacity:
          Ref: MaxACU
  AuroraInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier:
        Ref: AuroraCluster
      DBInstanceClass: db.serverless
      Engine: aurora-mysql
Outputs:
  ClusterArn:
    Description: ARN of the Aurora DB Cluster
    Value:
      Ref: AuroraCluster
  SecretArn:
    Description: ARN of the Secrets Manager Secret
    Value:
      Ref: DBSecret
  DBEndpoint:
    Description: Endpoint address of the Aurora DB Cluster
    Value:
      Fn::GetAtt:
      - AuroraCluster
      - Endpoint.Address
